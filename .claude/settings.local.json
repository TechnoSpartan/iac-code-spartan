{
  "permissions": {
    "allow": [
      "Bash(terraform:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(ssh hetzner \"docker ps -a --format ''table {{.Names}}\\t{{.Image}}\\t{{.Status}}''\")",
      "Bash(ssh hetzner \"cat /opt/codespartan/platform/stacks/backoffice/docker-compose.yml\")",
      "Bash(ssh:*)",
      "Bash(curl -s -u admin:codespartan123 https://grafana.mambo-cloud.com/api/datasources)",
      "Bash(curl -s -u admin:codespartan123 -X POST -H \"Content-Type: application/json\" -d '{\"\"dashboard\"\": {\"\"id\"\": null, \"\"uid\"\": null, \"\"title\"\": \"\"Import Test\"\", \"\"tags\"\": [], \"\"timezone\"\": \"\"browser\"\", \"\"schemaVersion\"\": 16, \"\"version\"\": 0, \"\"panels\"\": []}, \"\"overwrite\"\": true}' https://grafana.mambo-cloud.com/api/dashboards/db)",
      "Bash(curl -s -u admin:codespartan123 -X GET https://grafana.mambo-cloud.com/api/datasources/3)",
      "Bash(curl -s -u admin:codespartan123 -X PUT -H \"Content-Type: application/json\" -d @- https://grafana.mambo-cloud.com/api/datasources/3)",
      "Bash(curl -s \"https://grafana.com/api/dashboards/1860/revisions/latest/download\")",
      "Bash(curl -s -u admin:codespartan123 https://grafana.mambo-cloud.com/api/search?type=dash-db)",
      "Bash(curl -s -u admin:codespartan123 -X DELETE https://grafana.mambo-cloud.com/d/ff04ezegcdd6oe/import-test)",
      "Bash(scp:*)",
      "Bash(gh run list:*)",
      "Bash(curl:*)",
      "Bash(curl -s -o /dev/null -w \"HTTP Status: %{http_code}\\n\" -u admin:codespartan123 https://backoffice.mambo-cloud.com)",
      "Bash(https://ntfy.sh/codespartan-mambo-alerts)",
      "Bash(chmod:*)",
      "Read(//Users/krbaio3/Worker/@CodeSpartan/ms-nd-bko-trackworks/**)",
      "Read(//Users/krbaio3/Worker/@CodeSpartan/ft-rc-bko-dummy/**)",
      "Bash(mkdir:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow run:*)",
      "Read(//Users/krbaio3/Worker/@CodeSpartan/ms-nd-bko-trackworks/**)",
      "Read(//Users/krbaio3/Worker/@CodeSpartan/**)",
      "Bash(gh run watch:*)",
      "Bash(dig:*)",
      "Bash(cat:*)",
      "Bash(python3:*)",
      "Bash(gh api:*)",
      "Bash(git pull:*)",
      "Bash(gh secret:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(python3:*)",
      "Bash(git fetch:*)",
      "Bash(gh pr view:*)",
      "Read(//Users/krbaio3/.ssh/**)",
      "Bash(gh pr create --base main --head develop --title \"release: Deploy TruckWorks frontend to production\" --body \"$(cat <<''EOF''\n## Summary\n\nComplete GitFlow CI/CD implementation ready for production deployment.\n\n## Changes Included\n\n### Infrastructure\n- Multi-stage Dockerfile with Node 20 + Nginx optimization\n- Nginx configuration for SPA routing with health checks\n- Docker multi-arch build (AMD64 + ARM64)\n- GHCR image registry integration\n\n### CI/CD Workflows\n- Quality checks on feature branches (lint, type-check, build)\n- Automated staging deployment from develop branch\n- Automated production deployment from main branch  \n- Health checks and rollback mechanism\n- Discord notifications integration\n\n### Deployments\n- Staging: https://staging.cyberdyne-systems.es (âœ… Deployed & Verified)\n- Production: https://www.cyberdyne-systems.es (Ready to deploy)\n\n## Test Plan\n\n- [x] Quality checks passed\n- [x] Docker image built successfully  \n- [x] Staging deployment successful\n- [x] Staging endpoint verified (HTTP 200)\n- [ ] Production deployment\n- [ ] Production endpoint verification\n\n---\n\nGenerated with Claude Code\nEOF\n)\")",
      "Bash(gh pr merge:*)",
      "Bash(gh pr create:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(read -p:*)",
      "Bash(export HETZNER_DNS_TOKEN=\"qXX85vnd6fPWWSf9Ubpkia2ERV5OMwEq\")",
      "Bash(gh repo list:*)",
      "Bash(git remote set-url:*)",
      "Bash(gh workflow list:*)"
    ],
    "deny": [],
    "ask": []
  }
}
