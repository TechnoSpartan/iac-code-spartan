version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cyberdyne-frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    labels:
      - traefik.enable=true

      # Main domain (www)
      - traefik.http.routers.cyberdyne-www.rule=Host(`www.cyberdyne-systems.es`)
      - traefik.http.routers.cyberdyne-www.entrypoints=websecure
      - traefik.http.routers.cyberdyne-www.tls=true
      - traefik.http.routers.cyberdyne-www.tls.certresolver=le

      # Root domain redirect to www
      - traefik.http.routers.cyberdyne-root.rule=Host(`cyberdyne-systems.es`)
      - traefik.http.routers.cyberdyne-root.entrypoints=websecure
      - traefik.http.routers.cyberdyne-root.tls=true
      - traefik.http.routers.cyberdyne-root.tls.certresolver=le
      - traefik.http.routers.cyberdyne-root.middlewares=cyberdyne-redirect-www

      # Middleware to redirect root to www
      - traefik.http.middlewares.cyberdyne-redirect-www.redirectregex.regex=^https://cyberdyne-systems.es/(.*)
      - traefik.http.middlewares.cyberdyne-redirect-www.redirectregex.replacement=https://www.cyberdyne-systems.es/$${1}
      - traefik.http.middlewares.cyberdyne-redirect-www.redirectregex.permanent=true

      # Staging subdomain
      - traefik.http.routers.cyberdyne-staging.rule=Host(`staging.cyberdyne-systems.es`)
      - traefik.http.routers.cyberdyne-staging.entrypoints=websecure
      - traefik.http.routers.cyberdyne-staging.tls=true
      - traefik.http.routers.cyberdyne-staging.tls.certresolver=le

      # Lab subdomain
      - traefik.http.routers.cyberdyne-lab.rule=Host(`lab.cyberdyne-systems.es`)
      - traefik.http.routers.cyberdyne-lab.entrypoints=websecure
      - traefik.http.routers.cyberdyne-lab.tls=true
      - traefik.http.routers.cyberdyne-lab.tls.certresolver=le

      - traefik.docker.network=web
      - traefik.http.services.cyberdyne-frontend.loadbalancer.server.port=80

    networks:
      - web           # Accesible por Traefik
      - cyberdyne_net # Red interna de la aplicaci√≥n
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

networks:
  web:
    external: true
  cyberdyne_net:
    name: cyberdyne_internal
    driver: bridge
    internal: false # Permite acceso a internet para el frontend
    ipam:
      config:
        - subnet: 172.23.0.0/24
