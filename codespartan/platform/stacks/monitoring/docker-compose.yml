services:
  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.106.1
    container_name: victoriametrics
    command:
      - -storageDataPath=/storage
      - -retentionPeriod=7d
      - -httpListenAddr=:8428
    volumes:
      - victoria-data:/storage
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8428/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  vmagent:
    image: victoriametrics/vmagent:v1.106.1
    container_name: vmagent
    command:
      - -promscrape.config=/etc/prometheus/prometheus.yml
      - -remoteWrite.url=http://victoriametrics:8428/api/v1/write
    volumes:
      - ./victoriametrics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - victoriametrics
    networks:
      - monitoring
      - web  # Needs access to web network to scrape Traefik metrics
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.05'
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8429/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  vmalert:
    image: victoriametrics/vmalert:v1.106.1
    container_name: vmalert
    command:
      - -datasource.url=http://victoriametrics:8428
      - -remoteWrite.url=http://victoriametrics:8428
      - -remoteRead.url=http://victoriametrics:8428
      - -rule=/etc/alerts/*.yml
      - -notifier.url=http://alertmanager:9093
      - -evaluationInterval=30s
      - -httpListenAddr=:8880
    volumes:
      - ./alerts:/etc/alerts:ro
    depends_on:
      - victoriametrics
      - alertmanager
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8880/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --web.listen-address=:9093
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    depends_on:
      - ntfy-forwarder
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  ntfy-forwarder:
    build:
      context: ./ntfy-forwarder
      dockerfile: Dockerfile
    container_name: ntfy-forwarder
    environment:
      - NTFY_URL=https://ntfy.sh/codespartan-mambo-alerts
      - DISCORD_WEBHOOK=https://discord.com/api/webhooks/1428474626413170861/dn_13yS7C27tQ1jdkARIgTFlLt8UkNOr_tUUZmDQCrS9rBWZQ1olrOAfCGCVlE4A8UWx
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  loki:
    image: grafana/loki:3.2.1
    container_name: loki
    command: -config.file=/etc/loki/loki.yml
    volumes:
      - ./loki/loki.yml:/etc/loki/loki.yml:ro
      - loki-data:/loki
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  promtail:
    image: grafana/promtail:3.2.1
    container_name: promtail
    command: -config.file=/etc/promtail/promtail.yml
    volumes:
      - ./promtail/promtail.yml:/etc/promtail/promtail.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.05'
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9080/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  grafana:
    image: grafana/grafana:11.3.1
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_DOMAIN=${GRAFANA_HOST}
      - GF_SERVER_ROOT_URL=https://${GRAFANA_HOST}
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=le
      - traefik.docker.network=web
      - traefik.http.routers.grafana.middlewares=rate-limit-global@file,security-headers@file,compression@file
    networks:
      - web  # Public access via Traefik
      - monitoring  # Access to VictoriaMetrics and Loki
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.50.0
    container_name: cadvisor
    command:
      - --docker_only=true
      - --housekeeping_interval=30s
      - --disable_metrics=disk,diskIO,tcp,udp,process,hugetlb,referenced_memory,cpu_topology,resctrl,cpuset,advtcp,memory_numa,sched
      - --store_container_labels=false
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.05'
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  node-exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node-exporter
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs
      - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 32M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

volumes:
  victoria-data:
  loki-data:
  grafana-data:
  alertmanager-data:

networks:
  web:
    external: true
  monitoring:
    driver: bridge
    name: monitoring

